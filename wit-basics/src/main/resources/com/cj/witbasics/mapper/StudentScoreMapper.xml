<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.witbasics.mapper.StudentScoreMapper" >
  <resultMap id="BaseResultMap" type="com.cj.witbasics.entity.StudentScore" >
    <id column="score_id" property="scoreId" jdbcType="BIGINT" />
    <result column="school_id" property="schoolId" jdbcType="BIGINT" />
    <result column="exam_parent_id" property="examParentId" jdbcType="BIGINT" />
    <result column="exam_id" property="examId" jdbcType="BIGINT" />
    <result column="thetime" property="thetime" jdbcType="DATE" />
    <result column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="register_number" property="registerNumber" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="school_stage_id" property="schoolStageId" jdbcType="VARCHAR" />
    <result column="school_subject_id" property="schoolSubjectId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="DECIMAL" />
    <result column="subject_total_score" property="subjectTotalScore" jdbcType="VARCHAR" />
    <result column="grade_ranking" property="gradeRanking" jdbcType="INTEGER" />
    <result column="class_ranking" property="classRanking" jdbcType="INTEGER" />
    <result column="founder_id" property="founderId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    score_id, school_id, exam_parent_id, exam_id, thetime, class_id, register_number,
    student_name, school_stage_id, school_subject_id, score, subject_total_score, grade_ranking,
    class_ranking, founder_id, create_time, operator_id, delete_time, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from student_score
    where score_id = #{scoreId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student_score
    where score_id = #{scoreId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cj.witbasics.entity.StudentScore" >
    insert into student_score (score_id, school_id, exam_parent_id,
    exam_id, thetime, class_id,
    register_number, student_name, school_stage_id,
    school_subject_id, score, subject_total_score,
    grade_ranking, class_ranking, founder_id,
    create_time, operator_id, delete_time,
    state)
    values (#{scoreId,jdbcType=BIGINT}, #{schoolId,jdbcType=BIGINT}, #{examParentId,jdbcType=BIGINT},
    #{examId,jdbcType=BIGINT}, #{thetime,jdbcType=DATE}, #{classId,jdbcType=BIGINT},
    #{registerNumber,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{schoolStageId,jdbcType=VARCHAR},
    #{schoolSubjectId,jdbcType=BIGINT}, #{score,jdbcType=DECIMAL}, #{subjectTotalScore,jdbcType=VARCHAR},
    #{gradeRanking,jdbcType=INTEGER}, #{classRanking,jdbcType=INTEGER}, #{founderId,jdbcType=BIGINT},
    #{createTime,jdbcType=TIMESTAMP}, #{operatorId,jdbcType=BIGINT}, #{deleteTime,jdbcType=TIMESTAMP},
    #{state,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cj.witbasics.entity.StudentScore" >
    insert into student_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scoreId != null" >
        score_id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="examParentId != null" >
        exam_parent_id,
      </if>
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="thetime != null" >
        thetime,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="registerNumber != null" >
        register_number,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="schoolStageId != null" >
        school_stage_id,
      </if>
      <if test="schoolSubjectId != null" >
        school_subject_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="subjectTotalScore != null" >
        subject_total_score,
      </if>
      <if test="gradeRanking != null" >
        grade_ranking,
      </if>
      <if test="classRanking != null" >
        class_ranking,
      </if>
      <if test="founderId != null" >
        founder_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scoreId != null" >
        #{scoreId,jdbcType=BIGINT},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="examParentId != null" >
        #{examParentId,jdbcType=BIGINT},
      </if>
      <if test="examId != null" >
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="thetime != null" >
        #{thetime,jdbcType=DATE},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="registerNumber != null" >
        #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="schoolStageId != null" >
        #{schoolStageId,jdbcType=VARCHAR},
      </if>
      <if test="schoolSubjectId != null" >
        #{schoolSubjectId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="subjectTotalScore != null" >
        #{subjectTotalScore,jdbcType=VARCHAR},
      </if>
      <if test="gradeRanking != null" >
        #{gradeRanking,jdbcType=INTEGER},
      </if>
      <if test="classRanking != null" >
        #{classRanking,jdbcType=INTEGER},
      </if>
      <if test="founderId != null" >
        #{founderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.witbasics.entity.StudentScore" >
    update student_score
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="examParentId != null" >
        exam_parent_id = #{examParentId,jdbcType=BIGINT},
      </if>
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="thetime != null" >
        thetime = #{thetime,jdbcType=DATE},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="registerNumber != null" >
        register_number = #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="schoolStageId != null" >
        school_stage_id = #{schoolStageId,jdbcType=VARCHAR},
      </if>
      <if test="schoolSubjectId != null" >
        school_subject_id = #{schoolSubjectId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="subjectTotalScore != null" >
        subject_total_score = #{subjectTotalScore,jdbcType=VARCHAR},
      </if>
      <if test="gradeRanking != null" >
        grade_ranking = #{gradeRanking,jdbcType=INTEGER},
      </if>
      <if test="classRanking != null" >
        class_ranking = #{classRanking,jdbcType=INTEGER},
      </if>
      <if test="founderId != null" >
        founder_id = #{founderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where score_id = #{scoreId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.witbasics.entity.StudentScore" >
    update student_score
    set school_id = #{schoolId,jdbcType=BIGINT},
      exam_parent_id = #{examParentId,jdbcType=BIGINT},
      exam_id = #{examId,jdbcType=BIGINT},
      thetime = #{thetime,jdbcType=DATE},
      class_id = #{classId,jdbcType=BIGINT},
      register_number = #{registerNumber,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      school_stage_id = #{schoolStageId,jdbcType=VARCHAR},
      school_subject_id = #{schoolSubjectId,jdbcType=BIGINT},
      score = #{score,jdbcType=DECIMAL},
      subject_total_score = #{subjectTotalScore,jdbcType=VARCHAR},
      grade_ranking = #{gradeRanking,jdbcType=INTEGER},
      class_ranking = #{classRanking,jdbcType=INTEGER},
      founder_id = #{founderId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR}
    where score_id = #{scoreId,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryBySome" parameterType="com.cj.witbasics.entity.StudentScore" >
    update student_score
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
      <if test="examParentId != null" >
        exam_parent_id = #{examParentId,jdbcType=BIGINT},
      </if>
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="thetime != null" >
        thetime = #{thetime,jdbcType=DATE},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="registerNumber != null" >
        register_number = #{registerNumber,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="schoolStageId != null" >
        school_stage_id = #{schoolStageId,jdbcType=VARCHAR},
      </if>
      <if test="schoolSubjectId != null" >
        school_subject_id = #{schoolSubjectId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="subjectTotalScore != null" >
        subject_total_score = #{subjectTotalScore,jdbcType=VARCHAR},
      </if>
      <if test="gradeRanking != null" >
        grade_ranking = #{gradeRanking,jdbcType=INTEGER},
      </if>
      <if test="classRanking != null" >
        class_ranking = #{classRanking,jdbcType=INTEGER},
      </if>
      <if test="founderId != null" >
        founder_id = #{founderId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    WHERE
    register_number = #{registerNumber,jdbcType=VARCHAR}
    AND
    school_subject_id = #{schoolSubjectId,jdbcType=BIGINT}
  </update>


  <!--根据学籍号,科目id,查重-->
  <select id="selectByCountScoreId" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT
    COUNT(score_id)
    FROM
    student_score ss
    WHERE
    ss.exam_parent_id = #{examParentId}
    AND
    ss.register_number = #{registerNumber}
    AND
    ss.school_subject_id = #{subjectId}

  </select>

  <!--批量插入-->
  <insert id="insertBathInfo" parameterType="com.cj.witbasics.entity.StudentScore" >
    insert into student_score (school_id, exam_id ,exam_parent_id,
    student_name, register_number, school_stage_id, thetime, class_id,
    school_subject_id, score,
    founder_id, create_time, operator_id)
    values
    <foreach collection="list" item="score" separator=",">
      (#{score.schoolId,jdbcType=BIGINT}, #{score.examId,jdbcType=BIGINT},#{score.examParentId,jdbcType=BIGINT},
      #{score.studentName,jdbcType=VARCHAR}, #{score.registerNumber,jdbcType=VARCHAR}, #{score.schoolStageId,jdbcType=VARCHAR},
      #{score.thetime,jdbcType=TIMESTAMP}, #{score.classId,jdbcType=BIGINT},
      #{score.schoolSubjectId,jdbcType=BIGINT}, #{score.score,jdbcType=DECIMAL},
      #{score.founderId,jdbcType=BIGINT}, #{score.createTime,jdbcType=TIMESTAMP}, #{score.operatorId,jdbcType=BIGINT}
      )
    </foreach>
  </insert>



  <resultMap id="sssvMap" type="com.cj.witcommon.entity.ClassGradeInfo" >
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="subject_id" property="subjectId" jdbcType="BIGINT" />
    <result column="subject_name" property="subjectName" jdbcType="VARCHAR" />
    <result column="min_score" property="minScore" jdbcType="DECIMAL" />
    <result column="max_score" property="maxScore" jdbcType="DECIMAL" />
    <result column="avg_score" property="avgScore" jdbcType="DECIMAL" />
    <result column="actually_come" property="actuallyCome" jdbcType="BIGINT" />
    <result column="not_come" property="notCome" jdbcType="BIGINT" />
  </resultMap>
  <!-- 查询年级班级成绩统计 -->
  <select id="selectPowerByHeadmaster" parameterType="long" resultMap="sssvMap">
    SELECT
    sc.class_id, sc.class_name, su.subject_id, su.subject_name,
    COUNT(IF(ss.score>0,TRUE,NULL)) AS actually_come, COUNT(IF(ss.score=0,TRUE,NULL))  AS not_come,
    AVG(ss.score) AS avg_score,
    MIN(ss.score) AS min_score,
    MAX(ss.score)AS max_score
    FROM
    student_score AS ss
    LEFT JOIN school_class AS sc ON ss.class_id = sc.class_id
    LEFT JOIN school_subject AS su ON ss.school_subject_id = su.subject_id
    WHERE
    ss.exam_parent_id= #{examParentId}
    AND
    sc.state != '0'
    GROUP BY subject_id ,class_id
  </select>

  <!--成绩查询,科目教师权限-->
  <select id="selectPowerBySubjectTeacher" parameterType="Long" resultMap="sssvMap">
    SELECT sc.class_id, sc.class_name, su.subject_id, su.subject_name, MIN(ss.score) AS min_score,
    MAX(ss.score)AS max_score, AVG(ss.score) AS avg_score,
    COUNT(ss.score) AS actually_come, (COUNT(*) - COUNT(ss.score))  AS not_come
    FROM student_osaas AS so
    LEFT JOIN student_score AS ss
    ON so.register_number = ss.register_number
    LEFT JOIN school_class AS sc
    ON so.class_id = sc.class_id
    LEFT JOIN school_subject AS su
    ON ss.school_subject_id = su.subject_id
    WHERE
    sc.state != '0'
    AND
    sc.class_id = #{adminInfoId,jdbcType=BIGINT}
    AND
    ss.school_subject_id IN
    <foreach collection="list" item="info" open="(" separator="," close=")">
      #{info.subjectId,jdbcType=BIGINT}
    </foreach>
    GROUP BY subject_id
  </select>

  <!-- 年级主任 -->
  <select id="selectPowerByPeriodIdAndThetime" resultMap="sssvMap">
    SELECT sc.class_id, sc.class_name, su.subject_id, su.subject_name, MIN(ss.score) AS min_score,
    MAX(ss.score)AS max_score, AVG(ss.score) AS avg_score,
    COUNT(ss.score) AS actually_come, (COUNT(*) - COUNT(ss.score))  AS not_come
    FROM student_osaas AS so
    LEFT JOIN student_score AS ss
    ON so.register_number = ss.register_number
    LEFT JOIN school_class AS sc
    ON so.class_id = sc.class_id
    LEFT JOIN school_subject AS su
    ON ss.school_subject_id = su.subject_id
    WHERE
    sc.class_period_id = #{info.periodId,jdbcType=BIGINT}
    AND
    sp.thetime = #{info.thetime,jdbcType=TIMESTAMP}
    AND sc.state != '0'
    GROUP BY subject_id
  </select>


  <!--系统管理员-->
  <select id="">


  </select>


  <!--查看分数-->
  <resultMap id="superBea" type="java.util.Map">
    <id column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="subject_id" property="subjectId" jdbcType="BIGINT" />
    <result column="subjectName" property="subject_name" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DECIMAL" />
  </resultMap>
  <select id="selectByClassIdAndSubjectId" resultMap="superBea">
    SELECT
    sc.class_id, st.student_name, sc.class_name, ss.subject_id, ss.subject_name, st.score
    FROM
    class_subject_info AS cs
    LEFT JOIN school_class AS sc
    ON cs.class_id = sc.class_id
    LEFT JOIN school_subject AS ss
    ON cs.subject_id = ss.subject_id
    LEFT JOIN student_score AS st
    ON ss.subject_id = st.school_subject_id
    LEFT JOIN school_period_class_thetime AS sp
    ON cs.class_id = sp.class_id
    WHERE
    sc.class_id = #{classId,jdbcType=BIGINT}
    AND
    ss.subject_id = #{subjectId,jdbcType=BIGINT}
    AND
    sc.state != '0'
  </select>


  <!--导出-->
  <select id="selectBathInfo" resultMap="sssvMap">
    SELECT sc.class_name, MIN(st.score) AS min_score,
    MAX(st.score)AS max_score, AVG(st.score) AS avg_score,
    COUNT(st.score) AS actually_come, (COUNT(*) - COUNT(st.score))  AS not_come
    FROM
    class_subject_info AS cs
    LEFT JOIN school_class AS sc
    ON cs.class_id = sc.class_id
    LEFT JOIN school_subject AS ss
    ON cs.subject_id = ss.subject_id
    LEFT JOIN student_score AS st
    ON ss.subject_id = st.school_subject_id
    LEFT JOIN school_period_class_thetime AS sp
    ON cs.class_id = sp.class_id
    WHERE
    sc.state != '0'
    AND
    sc.class_id IN
    <foreach collection="list" item="class" open="(" close=")" separator=",">
      #{class, jdbcType=BIGINT}
    </foreach>
    GROUP BY cs.subject_id
  </select>

  <!--批量更新-->
  <update id="updateBatchInfo">
    update student_score
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="school_id = case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.schoolId != null" >
            WHEN
            register_number = #{item.registerNumber,jdbcType=VARCHAR}
            AND
            school_subject_id = #{item.schoolSubjectId,jdbcType=BIGINT}
            THEN
            #{item.schoolId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>

      <trim prefix="exam_id = case" suffix="end,">
        <foreach collection="list" item="item">
          <if test="item.examId != null" >
            WHEN
            register_number = #{item.registerNumber,jdbcType=VARCHAR}
            AND
            school_subject_id = #{item.schoolSubjectId,jdbcType=BIGINT}
            THEN
            #{examId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
    </trim>


    set school_id = #{schoolId,jdbcType=BIGINT},
    exam_parent_id = #{examParentId,jdbcType=BIGINT},
    exam_id = #{examId,jdbcType=BIGINT},
    thetime = #{thetime,jdbcType=DATE},
    class_id = #{classId,jdbcType=BIGINT},
    register_number = #{registerNumber,jdbcType=VARCHAR},
    student_name = #{studentName,jdbcType=VARCHAR},
    school_stage_id = #{schoolStageId,jdbcType=VARCHAR},
    school_subject_id = #{schoolSubjectId,jdbcType=BIGINT},
    score = #{score,jdbcType=DECIMAL},
    subject_total_score = #{subjectTotalScore,jdbcType=VARCHAR},
    grade_ranking = #{gradeRanking,jdbcType=INTEGER},
    class_ranking = #{classRanking,jdbcType=INTEGER},
    founder_id = #{founderId,jdbcType=BIGINT},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    operator_id = #{operatorId,jdbcType=BIGINT},
    delete_time = #{deleteTime,jdbcType=TIMESTAMP},
    state = #{state,jdbcType=CHAR}
    where score_id = #{scoreId,jdbcType=BIGINT}
  </update>



  <resultMap id="adminMap" type="com.cj.witbasics.entity.Admin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="admin_pass" property="adminPass" jdbcType="VARCHAR" />
    <result column="salt_val" property="saltVal" jdbcType="VARCHAR" />
    <result column="admin_type" property="adminType" jdbcType="CHAR" />
    <result column="admin_state" property="adminState" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="selectAdminInfoById" parameterType="Long" resultMap="adminMap">
    select
    *
    from admin
    where id = #{id,jdbcType=BIGINT}
  </select>

  <resultMap id="roleMap" type="com.cj.witbasics.entity.AdminRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="selectAdminRoleByRoleId" parameterType="Long" resultMap="roleMap">
    select
    *
    from admin_role
    where id = #{roleId,jdbcType=INTEGER}
  </select>

</mapper>