<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.witbasics.mapper.SchoolExamParentMapper" >
  <resultMap id="BaseResultMap" type="com.cj.witbasics.entity.SchoolExamParent" >
    <id column="exam_parent_id" property="examParentId" jdbcType="BIGINT" />
    <result column="exam_name" property="examName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    exam_parent_id, exam_name, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from school_exam_parent
    where exam_parent_id = #{examParentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from school_exam_parent
    where exam_parent_id = #{examParentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cj.witbasics.entity.SchoolExamParent" >
    insert into school_exam_parent (exam_parent_id, exam_name, create_time
      )
    values (#{examParentId,jdbcType=BIGINT}, #{examName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cj.witbasics.entity.SchoolExamParent" >
    <selectKey order="AFTER" keyProperty="examParentId" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into school_exam_parent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examParentId != null" >
        exam_parent_id,
      </if>
      <if test="examName != null" >
        exam_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examParentId != null" >
        #{examParentId,jdbcType=BIGINT},
      </if>
      <if test="examName != null" >
        #{examName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.witbasics.entity.SchoolExamParent" >
    update school_exam_parent
    <set >
      <if test="examName != null" >
        exam_name = #{examName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where exam_parent_id = #{examParentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.witbasics.entity.SchoolExamParent" >
    update school_exam_parent
    set exam_name = #{examName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where exam_parent_id = #{examParentId,jdbcType=BIGINT}
  </update>


  <!--模糊查询考试集合-->
  <select id="findAllSchoolExamParentByParameter" parameterType="com.cj.witcommon.utils.entity.other.Pager" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    school_exam_parent sep
    <if test="parameter != null">
      WHERE
      sep.exam_name LIKE concat(concat('%',#{parameter}),'%')
    </if>
    limit #{minRow},#{pageSize}
  </select>
  
  <!--查重,根据考试名称-->
  <select id="selectByExamName" parameterType="String" resultType="int">
    select
    COUNT(exam_parent_id)
    from school_exam_parent
    where exam_name = #{examName,jdbcType=VARCHAR}
  </select>


  <!--根据考试名称查询考试父ID-->
  <select id="findExamParentId" parameterType="java.lang.String" resultType="java.lang.Long">
    SELECT
    sep.exam_parent_id
    FROM
    school_exam_parent sep
    WHERE
    sep.exam_name = #{examName}
  </select>
</mapper>