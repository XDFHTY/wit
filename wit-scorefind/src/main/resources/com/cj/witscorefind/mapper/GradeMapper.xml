<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cj.witscorefind.mapper.GradeMapper" >
  <resultMap id="BaseResultMap" type="com.cj.witbasics.entity.Grade" >
    <id column="grade_id" property="gradeId" jdbcType="BIGINT" />
    <result column="exam_grade_id" property="examGradeId" jdbcType="BIGINT" />
    <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
    <result column="grade_type" property="gradeType" jdbcType="CHAR" />
    <result column="num_max" property="numMax" jdbcType="INTEGER" />
    <result column="num_min" property="numMin" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    grade_id, exam_grade_id, grade_name, grade_type, num_max, num_min
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from grade
    where grade_id = #{gradeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from grade
    where grade_id = #{gradeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cj.witbasics.entity.Grade" >
    insert into grade (grade_id, exam_grade_id, grade_name, 
      grade_type, num_max, num_min
      )
    values (#{gradeId,jdbcType=BIGINT}, #{examGradeId,jdbcType=BIGINT}, #{gradeName,jdbcType=VARCHAR}, 
      #{gradeType,jdbcType=CHAR}, #{numMax,jdbcType=INTEGER}, #{numMin,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cj.witbasics.entity.Grade" >
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="examGradeId != null" >
        exam_grade_id,
      </if>
      <if test="gradeName != null" >
        grade_name,
      </if>
      <if test="gradeType != null" >
        grade_type,
      </if>
      <if test="numMax != null" >
        num_max,
      </if>
      <if test="numMin != null" >
        num_min,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gradeId != null" >
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="examGradeId != null" >
        #{examGradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null" >
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeType != null" >
        #{gradeType,jdbcType=CHAR},
      </if>
      <if test="numMax != null" >
        #{numMax,jdbcType=INTEGER},
      </if>
      <if test="numMin != null" >
        #{numMin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cj.witbasics.entity.Grade" >
    update grade
    <set >
      <if test="examGradeId != null" >
        exam_grade_id = #{examGradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null" >
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeType != null" >
        grade_type = #{gradeType,jdbcType=CHAR},
      </if>
      <if test="numMax != null" >
        num_max = #{numMax,jdbcType=INTEGER},
      </if>
      <if test="numMin != null" >
        num_min = #{numMin,jdbcType=INTEGER},
      </if>
    </set>
    where grade_id = #{gradeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cj.witbasics.entity.Grade" >
    update grade
    set exam_grade_id = #{examGradeId,jdbcType=BIGINT},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      grade_type = #{gradeType,jdbcType=CHAR},
      num_max = #{numMax,jdbcType=INTEGER},
      num_min = #{numMin,jdbcType=INTEGER}
    where grade_id = #{gradeId,jdbcType=BIGINT}
  </update>

  <!--新增档次设置数据-->
  <insert id="addGrade" parameterType="java.util.List">
    insert into grade(
    exam_grade_id,
    grade_name,
    grade_type,
    num_max,
    num_min

    )
    VALUES
      <foreach collection="list" item="item" separator=",">

        (#{item.examGradeId,jdbcType=BIGINT},
            #{item.gradeName,jdbcType=VARCHAR},
            #{item.gradeType,jdbcType=CHAR},
            #{item.numMax,jdbcType=INTEGER},
            #{item.numMin,jdbcType=INTEGER})
      </foreach>
  </insert>

  <!--清除档次设置数据-->
  <delete id="delGrade" parameterType="java.lang.Long">
    DELETE FROM grade
    WHERE
    exam_grade_id = #{examGradeId}
  </delete>
</mapper>